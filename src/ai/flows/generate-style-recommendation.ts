// This is an autogenerated file from Firebase Studio.
'use server';

/**
 * @fileOverview AI agent that generates style recommendations based on user browsing history.
 *
 * - generateStyleRecommendation - A function that generates style recommendations.
 * - GenerateStyleRecommendationInput - The input type for the generateStyleRecommendation function.
 * - GenerateStyleRecommendationOutput - The return type for the generateStyleRecommendation function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const GenerateStyleRecommendationInputSchema = z.object({
  browsingHistory: z
    .string()
    .describe('The user browsing history, as a comma separated list of product names.'),
});
export type GenerateStyleRecommendationInput = z.infer<typeof GenerateStyleRecommendationInputSchema>;

const GenerateStyleRecommendationOutputSchema = z.object({
  recommendations: z
    .string()
    .describe('Style recommendations based on the browsing history.'),
});
export type GenerateStyleRecommendationOutput = z.infer<typeof GenerateStyleRecommendationOutputSchema>;

export async function generateStyleRecommendation(input: GenerateStyleRecommendationInput): Promise<GenerateStyleRecommendationOutput> {
  return generateStyleRecommendationFlow(input);
}

const prompt = ai.definePrompt({
  name: 'generateStyleRecommendationPrompt',
  input: {schema: GenerateStyleRecommendationInputSchema},
  output: {schema: GenerateStyleRecommendationOutputSchema},
  prompt: `Based on the user's browsing history, provide style recommendations.

Browsing History: {{{browsingHistory}}}

Recommendations:`, 
});

const generateStyleRecommendationFlow = ai.defineFlow(
  {
    name: 'generateStyleRecommendationFlow',
    inputSchema: GenerateStyleRecommendationInputSchema,
    outputSchema: GenerateStyleRecommendationOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
